AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation stack for the api.

Parameters:
  ENV:
    Type: String
    Description: The environment (e.g., dev, prod)
    Default: dev
  CodeVersionId:
    Type: String
    Description: "The version ID of the Lambda function code in S3."
  S3Key:
    Type: String
    Description: "The key used by s3 to find the location of this code"

Resources:
  # Lambda Functions
  ApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "Api-${ENV}"
      Handler: event_handler.handle_request
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !ImportValue CodeBucketNameExport
        S3Key: !Ref S3Key
        S3ObjectVersion: !Ref CodeVersionId  # Use the passed version ID here
      Runtime: python3.12
      Timeout: 10
      MemorySize: 512

  # Lambda Log Groups
  ApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/Api
      RetentionInDays: 1


  # IAM Role for Lambda Execution
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*"
